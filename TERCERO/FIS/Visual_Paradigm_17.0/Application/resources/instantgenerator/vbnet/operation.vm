#if($class.isInterface() && $operation.getInheritedFrom())
	${indent}' method $operation.getName() is inherited from base class
	
#else
	#set($orginal=$current)
	#set($current=$operation)
	###################### Comment Start ######################
	#parse("$template-path/comment.vm")
	##parse("$template-path/parameters-comment.vm")
	###################### Comment End ######################
	#if($current.getDeclarativeAttribute() && $current.getDeclarativeAttribute()!="")
		${indent}#parse("$template-path/declarationType.vm")
		
	#end
	${indent}#parse("$template-path/visibility.vm")
	#parse("$template-path/member.vm")
	#if($operation.isSub())
		Sub $formatter.quoteIdentifier($operation.getMethodName(), $operation)##
		#parse("$template-path/typeParameters.vm")
		(##
		#parse("$template-path/parameters.vm")
		)##
		#parse("$template-path/implements.vm")
	#elseif($operation.isOperator())
		Operator $operation.getMethodName()##
		#parse("$template-path/typeParameters.vm")
		(##
		#parse("$template-path/parameters.vm")
		)##
		#if($operation.getMethodReturnType() && $operation.getMethodReturnType()!="")
			${space}As $operation.getMethodReturnType()##
		#end
	#else
		Function $formatter.quoteIdentifier($operation.getMethodName(), $operation)##
		#parse("$template-path/typeParameters.vm")
		(##
		#parse("$template-path/parameters.vm")
		)##
		#if($operation.getMethodReturnType() && $operation.getMethodReturnType()!="")
			${space}As $operation.getMethodReturnType()##
			#if($operation.getTemplateTypeBindInfo())
				#set($bindInfo=$operation.getTemplateTypeBindInfo())
				#parse("$template-path/bindInfo.vm")
			#end
		#end
		#parse("$template-path/implements.vm")
	#end
	#if(!$operation.isAbstract())
	
		#if($operation.hasReference() == true)
			#parse("$template-path/$operation.getReference().getRefTemplate()")
		#elseif($operation.getImplementations())
			#foreach ($line in $formatter.getDocumentationLineIterator($operation.getImplementations()))
				${indent}${tab}$line
			#end
		#else
			${indent}${tab}Throw New System.Exception("Not implemented")
		#end
		${indent}End##
		#if($operation.isSub())
			${space}Sub##
		#elseif($operation.isOperator())
			${space}Operator##
		#else
			${space}Function##
		#end
	#end
	
	#set($current=$orginal)
#end