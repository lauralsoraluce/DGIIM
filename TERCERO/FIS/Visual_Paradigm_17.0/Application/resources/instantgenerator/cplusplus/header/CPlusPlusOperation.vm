$operation.t_prepare()##
## ===== Output =====

$operation.t_getDocumentation("${baseIndentation}${indentation}")##
$operation.t_getDeclarativeAttribute("${baseIndentation}${indentation}")##
${baseIndentation}${indentation}##
#if ( $groupByVisibility )
	$indentation##
#else
	$operation.t_getVisibility()##
#end
$operation.t_getScope()$operation.t_getFriend()$operation.t_getVirtual()##
$operation.t_getTemplateParameters("template")##
$operation.t_getReturnTypeConst()$operation.t_getReturnTypeName()$operation.t_getGeneric()$operation.t_getReturnTypeModifier()##
$operation.t_getMethodKind()$operation.t_getOperationName()(##
#set( $parameterIndex = 0 )
#foreach($parameter in $operation.parameterIterator())
	#if ( $parameterIndex > 0 )
		, ##
	#end
	#parse("$template-dir/header/CPlusPlusParameter.vm")
	#set( $parameterIndex = $parameterIndex + 1 )
#end
)$operation.t_getConst()##
#set( $exceptionIndex = 0 )
#foreach($exception in $operation.raisedExceptionIterator())
	#if ( $exceptionIndex == 0 )
		${space}throw(##
	#else
		, ##
	#end
	#parse("$template-dir/header/CPlusPlusException.vm")
	#set( $exceptionIndex = $exceptionIndex + 1 )
	#if ( $exceptionIndex == $operation.raisedExceptionCount() )
		)##
	#end
#end
#if ( $operation.isAbstract() || $operation.t_isParentInterface() )
	#if ( $operation.isConstructor() || $operation.isDestructor() )
		;##
	#else
		$space= 0;##
	#end	
#elseif ( $operation.t_getScope() == "" )
	$operation.t_getSealed();##
#else
	$space{
	#if( $operation.hasReference() == true )
		#parse("$template-dir/cplusplus/$operation.getReference().getRefTemplate()")
	#else
		${baseIndentation}${indentation}${indentation}throw "Not yet implemented";
	#end
	${baseIndentation}${indentation}}##
#end

