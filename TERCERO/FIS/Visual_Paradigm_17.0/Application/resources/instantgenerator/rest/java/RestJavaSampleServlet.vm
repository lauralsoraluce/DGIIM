## ===== Global =====
#if( $indentationLevel == "0" )
	#set( $indentationLevel = 0 )
#end
#set( $baseIndentation = $utilities.getIndentation($indentation, $indentationLevel) )
## ===== Output =====
$rest.package##
${baseIndentation}import java.io.*;

${baseIndentation}import javax.servlet.*;
${baseIndentation}import javax.servlet.annotation.WebServlet;
${baseIndentation}import javax.servlet.http.*;

${baseIndentation}import com.google.gson.*;

${baseIndentation}@WebServlet("$rest.url")
${baseIndentation}public class ${rest.name}Servlet extends HttpServlet {
#if ($rest.method != "Patch")
${baseIndentation}${indentation}@Override
#end
${baseIndentation}${indentation}protected void do${rest.method}(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
${baseIndentation}${indentation}${indentation}Gson gson = new GsonBuilder().create();
#if ($rest.method == "Post" || $rest.method == "Patch")
#if ($rest.requestClass)
${baseIndentation}${indentation}${indentation}ServletInputStream inputStream = req.getInputStream();
${baseIndentation}${indentation}${indentation}InputStreamReader reader = new InputStreamReader(inputStream);
${baseIndentation}${indentation}${indentation}${rest.requestClass} ${utilities.getVariable($rest.requestClass)};
${baseIndentation}${indentation}${indentation}try {
${baseIndentation}${indentation}${indentation}${indentation}${utilities.getVariable($rest.requestClass)} = gson.fromJson(reader, ${rest.requestClass}.class);
${baseIndentation}${indentation}${indentation}} finally {
${baseIndentation}${indentation}${indentation}${indentation}reader.close();
${baseIndentation}${indentation}${indentation}}

#if ($rest.responseClass)
${baseIndentation}${indentation}${indentation}${rest.responseClass} ${utilities.getVariable($rest.responseClass)} = perform(${utilities.getVariable($rest.requestClass)});
#else
${baseIndentation}${indentation}${indentation}perform(${utilities.getVariable($rest.requestClass)});
#end
#else
#if ($rest.responseClass)
${baseIndentation}${indentation}${indentation}${rest.responseClass} ${utilities.getVariable($rest.responseClass)} = perform();
#else
${baseIndentation}${indentation}${indentation}perform();
#end
#end
#elseif ($rest.method == "Get" || $rest.method == "Delete" || $rest.method == "Put")
#if ($rest.parameters && !$rest.parameters.isEmpty())
#foreach ($param in $rest.parameters)
${baseIndentation}${indentation}${indentation}$param.type $param.name = $param.getFromRequest("req");
#end

#if ($rest.responseClass)
${baseIndentation}${indentation}${indentation}${rest.responseClass} ${utilities.getVariable($rest.responseClass)} = perform(${rest.performArguments});
#else
${baseIndentation}${indentation}${indentation}perform(${rest.performArguments});
#end
#else
#if ($rest.responseClass)
${baseIndentation}${indentation}${indentation}${rest.responseClass} ${utilities.getVariable($rest.responseClass)} = perform();
#else
${baseIndentation}${indentation}${indentation}perform();
#end
#end
#end
#if ($rest.responseClass)

${baseIndentation}${indentation}${indentation}String json = gson.toJson(${utilities.getVariable($rest.responseClass)});
${baseIndentation}${indentation}${indentation}resp.setContentType("application/json; charset=utf-8");
${baseIndentation}${indentation}${indentation}ServletOutputStream lOutputStream = resp.getOutputStream();
${baseIndentation}${indentation}${indentation}try {
${baseIndentation}${indentation}${indentation}${indentation}lOutputStream.write(json.getBytes("UTF-8"));
${baseIndentation}${indentation}${indentation}} finally {
${baseIndentation}${indentation}${indentation}${indentation}lOutputStream.close();
${baseIndentation}${indentation}${indentation}}
#end
${baseIndentation}${indentation}}

${baseIndentation}${indentation}private $rest.performReturn perform($rest.performParameters) {
${baseIndentation}${indentation}${indentation}throw new RuntimeException("Not implemented");
${baseIndentation}${indentation}}
#if ($rest.method == "Patch")

${baseIndentation}${indentation}@Override
${baseIndentation}${indentation}protected void service(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
${baseIndentation}${indentation}${indentation}if ("PATCH".equals(req.getMethod())) {
${baseIndentation}${indentation}${indentation}${indentation}doPatch(req, resp);
${baseIndentation}${indentation}${indentation}} else {
${baseIndentation}${indentation}${indentation}${indentation}super.service(req, resp);
${baseIndentation}${indentation}${indentation}}
${baseIndentation}${indentation}}
#end
${baseIndentation}}